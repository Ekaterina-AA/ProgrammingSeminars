<Window x:Class="ThirdCourse.WPF.Spinner.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:attached="clr-namespace:ThirdCourse.WPF.Spinner.Views.Attached"
        xmlns:controls="clr-namespace:ThirdCourse.WPF.Spinner.Views.Controls"
        xmlns:converters="clr-namespace:ThirdCourse.WPF.Spinner.Converters"
        xmlns:viewModels="clr-namespace:ThirdCourse.WPF.Spinner.ViewModels"
        mc:Ignorable="d"
        FontSize="50">
    <Window.DataContext>
        <viewModels:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="OwnButtonTemplate"
                   TargetType="{x:Type Button}">
                <Style.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <Border x:Name="_border"
                                            Background="White"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="5">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Rectangle Grid.Column="0"
                                                       Fill="{TemplateBinding Background}" />
                                            <Rectangle Grid.Column="1"
                                                       Fill="{Binding Path=(attached:ButtonAttachedProperties.SecondBackground), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" />
                                            <ContentPresenter Grid.Column="0"
                                                              Grid.ColumnSpan="2"
                                                              Content="{TemplateBinding Content}" />
                                        </Grid>
                                    </Border>
                                    <Rectangle x:Name="_isEnabledRectangle"
                                               Fill="Gray"
                                               Opacity="0.5" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled"
                                             Value="False">
                                        <Trigger.Setters>
                                            <Setter TargetName="_border"
                                                    Property="BorderBrush"
                                                    Value="Navy" />
                                            <Setter TargetName="_border"
                                                    Property="BorderThickness"
                                                    Value="3" />
                                            <Setter TargetName="_isEnabledRectangle"
                                                    Property="Visibility"
                                                    Value="Visible" />
                                        </Trigger.Setters>
                                    </Trigger>
                                    <Trigger Property="IsEnabled"
                                             Value="True">
                                        <Trigger.Setters>
                                            <Setter TargetName="_isEnabledRectangle"
                                                    Property="Visibility"
                                                    Value="Hidden" />
                                        </Trigger.Setters>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Content"
                            Value="-" />
                </Style.Setters>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <controls:Spinner Grid.Column="0"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center"
                          IsWorking="{Binding IsRotating}"
                          CirclesCount="{Binding CirclesCount}"
                          Direction="{Binding IsRotatingClockwise, Mode=OneWay, Converter={converters:BoolToRotationDirectionConverter}}" />
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0"
                           Grid.ColumnSpan="3"
                           TextAlignment="Center"
                           Text="Circles count:" />
                <Button Grid.Row="1"
                        Grid.Column="0"
                        Foreground="Red"
                        BorderBrush="Green"
                        Background="Yellow"
                        attached:ButtonAttachedProperties.SecondBackground="Blue"
                        Style="{StaticResource OwnButtonTemplate}"
                        Command="{Binding DecrementCirclesCountCommand}">
                    <Button.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0"
                                       HorizontalAlignment="Center"
                                       Text="upper" />
                            <TextBlock Grid.Row="1"
                                       HorizontalAlignment="Center"
                                       Text="lower" />
                        </Grid>
                    </Button.Content>
                </Button>
                <TextBlock Grid.Row="1"
                           Grid.Column="1"
                           TextAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding CirclesCount}" />
                <Button Grid.Row="1"
                        Grid.Column="2"
                        Foreground="Yellow"
                        BorderThickness="5"
                        BorderBrush="Magenta"
                        Background="Cyan"
                        attached:ButtonAttachedProperties.SecondBackground="Black"
                        Style="{StaticResource OwnButtonTemplate}"
                        Content="+"
                        Command="{Binding IncrementCirclesCountCommand}" />
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CheckBox Grid.Column="0"
                          VerticalContentAlignment="Center"
                          VerticalAlignment="Center"
                          FontSize="30"
                          Content="Working"
                          IsChecked="{Binding IsRotating}" />
                <CheckBox Grid.Column="1"
                          VerticalAlignment="Center"
                          VerticalContentAlignment="Center"
                          FontSize="30"
                          Content="Clockwise&#x0a;rotation"
                          IsChecked="{Binding IsRotatingClockwise}" />
            </Grid>
            <Border Grid.Row="2"
                    BorderBrush="Black"
                    BorderThickness="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0"
                            Margin="10,0,5,0">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CirclesCount}"
                                                 Value="3">
                                        <DataTrigger.Setters>
                                            <Setter Property="Content"
                                                    Value="Count = 3" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CirclesCount}"
                                                 Value="4">
                                        <DataTrigger.Setters>
                                            <Setter Property="Content"
                                                    Value="Count = 4" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CirclesCount}"
                                                 Value="5">
                                        <DataTrigger.Setters>
                                            <Setter Property="Content"
                                                    Value="Count = 5" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CirclesCount}"
                                                       Value="5" />
                                            <Condition Binding="{Binding IsRotating}"
                                                       Value="True" />
                                            <Condition Binding="{Binding IsRotatingClockwise}"
                                                       Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Content"
                                                    Value="TRIGGERED!!1!11" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Grid.Column="1"
                            Margin="5,0,10,0" />
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
